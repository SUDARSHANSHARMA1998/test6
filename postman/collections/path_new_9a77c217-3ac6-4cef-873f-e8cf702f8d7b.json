{
	"info": {
		"_postman_id": "f0e94441-bb57-41bd-9145-c7bddf17297d",
		"name": "path_new",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_uid": "525986-f0e94441-bb57-41bd-9145-c7bddf17297d"
	},
	"item": [
		{
			"name": "Sample endpoint: Returns details about a particulars",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8d26d1ab-9f96-44cc-a0ee-ccf63fea20ab",
						"exec": [
							"pm.test('Validate Response body', function () {",
							"pm.response.to.have.status(200);",
							"",
							"pm.response.to.have.header(\"Content-Type\")",
							"pm.expect(pm.response.headers.get('Content-Type')).to.have.string('application/json')",
							"",
							"const responseJson = pm.response.json();",
							"pm.expect(responseJson).to.be.an('object')",
							"pm.expect(responseJson.model_id).to.be.an('string')",
							"",
							"pm.expect(responseJson.meta).to.be.an('object')",
							"pm.expect(responseJson.meta).to.include.all.keys(\"model\",\"action\")",
							"pm.expect(responseJson.meta.model).to.be.an('string')",
							"",
							"pm.expect(responseJson.meta.action).to.be.an('string')",
							"",
							"pm.expect(responseJson.data).to.be.an('object')",
							"pm.expect(responseJson.data).to.include.all.keys(\"apiVersion\",\"id\",\"name\",\"description\",\"visibility\",\"entities\",\"createdBy\",\"updatedBy\",\"createdAt\",\"updatedAt\")",
							"pm.expect(responseJson.data.apiVersion).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.id).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.name).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.description).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.visibility).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.entities).to.be.an('object')",
							"if(_.get(responseJson.data.entities.schemas)) {",
							"  pm.expect(responseJson.data.entities.schemas).to.be.an('array')",
							"  pm.expect(responseJson.data.entities.schemas).to.be.an('array')",
							"  for (var i = 0; i < responseJson.data.entities.schemas.length; i++) { ",
							"   pm.expect(responseJson.data.entities.schemas[i]).to.be.an('object') ",
							"}}",
							"",
							"if(_.get(responseJson.data.entities.documentations)) {",
							"  pm.expect(responseJson.data.entities.documentations).to.be.an('array')",
							"  pm.expect(responseJson.data.entities.documentations).to.be.an('array')",
							"  for (var i = 0; i < responseJson.data.entities.documentations.length; i++) { ",
							"   pm.expect(responseJson.data.entities.documentations[i]).to.be.an('object') ",
							"}}",
							"",
							"if(_.get(responseJson.data.entities.integrationtests)) {",
							"  pm.expect(responseJson.data.entities.integrationtests).to.be.an('array')",
							"  pm.expect(responseJson.data.entities.integrationtests).to.be.an('array')",
							"  for (var i = 0; i < responseJson.data.entities.integrationtests.length; i++) { ",
							"   pm.expect(responseJson.data.entities.integrationtests[i]).to.be.an('object') ",
							"}}",
							"",
							"if(_.get(responseJson.data.entities.tests)) {",
							"  pm.expect(responseJson.data.entities.tests).to.be.an('array')",
							"  pm.expect(responseJson.data.entities.tests).to.be.an('array')",
							"  for (var i = 0; i < responseJson.data.entities.tests.length; i++) { ",
							"   pm.expect(responseJson.data.entities.tests[i]).to.be.an('object') ",
							"}}",
							"",
							"if(_.get(responseJson.data.entities.testsuites)) {",
							"  pm.expect(responseJson.data.entities.testsuites).to.be.an('array')",
							"  pm.expect(responseJson.data.entities.testsuites).to.be.an('array')",
							"  for (var i = 0; i < responseJson.data.entities.testsuites.length; i++) { ",
							"   pm.expect(responseJson.data.entities.testsuites[i]).to.be.an('object') ",
							"}}",
							"",
							"if(_.get(responseJson.data.entities.contracttests)) {",
							"  pm.expect(responseJson.data.entities.contracttests).to.be.an('array')",
							"  pm.expect(responseJson.data.entities.contracttests).to.be.an('array')",
							"  for (var i = 0; i < responseJson.data.entities.contracttests.length; i++) { ",
							"   pm.expect(responseJson.data.entities.contracttests[i]).to.be.an('object') ",
							"}}",
							"",
							"pm.expect(responseJson.data.createdBy).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.updatedBy).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.createdAt).to.be.an('string')",
							"",
							"pm.expect(responseJson.data.updatedAt).to.be.an('string')",
							"",
							"})"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"id": "49971831-a15b-438a-bb9c-ceb976d2fefd",
						"exec": [
							"pm.test('Validate Request body', function () {",
							" console.log('hi')",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "cc63b01c-e46c-4160-bf0d-f16f6316bcab",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/user/:info/:age?id=31061769",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"user",
						":info",
						":age"
					],
					"query": [
						{
							"key": "id",
							"value": "31061769",
							"description": "(Required) ID of the user"
						}
					],
					"variable": [
						{
							"key": "age",
							"value": "81505197",
							"description": "(Required) user&#39;s age"
						},
						{
							"key": "age",
							"value": "81505197",
							"description": "(Required) user&#39;s age"
						},
						{
							"key": "info",
							"value": null
						}
					]
				}
			},
			"response": [
				{
					"id": "637ade26-0b9e-41d1-88fc-6590770b7de9",
					"name": "Sample response: Details about a user by ID",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:info/:age?id=19256268",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":info",
								":age"
							],
							"query": [
								{
									"key": "id",
									"value": "19256268"
								}
							],
							"variable": [
								{
									"key": "info"
								},
								{
									"key": "age"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [
						{
							"description": {
								"content": "A link to the next page of responses",
								"type": "text/plain"
							},
							"key": "x-next",
							"value": "voluptate consequat in cupidatat"
						},
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n \"id\": -52411379,\n \"name\": \"ut cillum ullamco\",\n \"tag\": \"commodo incididunt\"\n}"
				},
				{
					"id": "13cb4cf6-5a92-47bf-a620-9ed0b3baf5e0",
					"name": "Unexpected error",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/:info/:age?id=19256268",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								":info",
								":age"
							],
							"query": [
								{
									"key": "id",
									"value": "19256268"
								}
							],
							"variable": [
								{
									"key": "info"
								},
								{
									"key": "age"
								}
							]
						}
					},
					"status": "Internal Server Error",
					"code": 500,
					"_postman_previewlanguage": "Text",
					"_postman_previewtype": "html",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n \"code\": 35749388,\n \"message\": \"qui voluptate occaecat\"\n}"
				}
			],
			"variable": [
				{
					"id": "b82ca4b1-3d0e-4972-91bd-0e1126ba2352",
					"key": "age",
					"value": "81505197",
					"type": "string",
					"description": "(Required) user&#39;s age"
				}
			]
		}
	],
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		}
	]
}